/* import { useWallet } from "@aptos-labs/wallet-adapter-react";
// Internal Components
import { Card, CardContent, CardHeader, CardTitle } from "./components/ui/card";
import { Header } from "./components/Header";
import { useState } from "react";
import { WalletSelector } from "./components/WalletSelector";
import { WalletDetails } from "./components/WalletDetails";
import { NetworkInfo } from "./components/NetworkInfo";
import { AccountInfo } from "./components/AcoountInfo";
import { Box, Flex } from "@chakra-ui/react";
import { CHAIN_NAME } from "./config";
import { notificateStore } from "./store/notificateStore";
import { Layout, Wallet, GameBoard, GameRooms, GameBoardVisual } from "./components";

function App() {
  const { connected } = useWallet();
  const [chainName] = useState(CHAIN_NAME);
  const { currentRoom, isSpectator, setNotifyCurrentRoom, setIsSpectator } = notificateStore();
  


  function onChainChange() {
    setNotifyCurrentRoom(null)
    setIsSpectator(false)
   }



  return (
    <>
      <div className="flex gap-2 items-center flex-wrap">
        <WalletSelector onChainChange={onChainChange} />
      </div>
      <div className="flex items-center justify-center flex-col">
        {connected ? (
          <Card>
            <CardContent className="flex flex-col gap-10 pt-6">
              <WalletDetails />
              <NetworkInfo />
              <AccountInfo />
            </CardContent>
            <Flex justify="center">
        {(!currentRoom || isSpectator) && (
          <Box mx={2}>
            <GameRooms chainName={chainName} />
          </Box>
        )}
        {(currentRoom && !isSpectator) && (
          <Box mx={2}>
            <GameBoard chainName={chainName} />
          </Box>
        )}
        {(currentRoom && isSpectator) && (
          <Box mx={2}>
            <GameBoardVisual chainName={chainName} />
          </Box>
        )}
      </Flex>
          </Card>
        ) : (
          <CardHeader>
            <CardTitle>To get started Connect a wallet</CardTitle>
          </CardHeader>
        )}
      </div>
    </>
  );
}

export default App;
*/